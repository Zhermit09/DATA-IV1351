/*
 * This file is generated by jOOQ.
 */
package se.soundgood.jooq.tables.records;


import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;

import se.soundgood.jooq.tables.StudentHistory;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentHistoryRecord extends UpdatableRecordImpl<StudentHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>student_history.student_id</code>.
     */
    public StudentHistoryRecord setStudentId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>student_history.student_id</code>.
     */
    public Long getStudentId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>student_history.time_slot_id</code>.
     */
    public StudentHistoryRecord setTimeSlotId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>student_history.time_slot_id</code>.
     */
    public Long getTimeSlotId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentHistoryRecord
     */
    public StudentHistoryRecord() {
        super(StudentHistory.STUDENT_HISTORY);
    }

    /**
     * Create a detached, initialised StudentHistoryRecord
     */
    public StudentHistoryRecord(Long studentId, Long timeSlotId) {
        super(StudentHistory.STUDENT_HISTORY);

        setStudentId(studentId);
        setTimeSlotId(timeSlotId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised StudentHistoryRecord
     */
    public StudentHistoryRecord(se.soundgood.jooq.tables.pojos.StudentHistory value) {
        super(StudentHistory.STUDENT_HISTORY);

        if (value != null) {
            setStudentId(value.studentId());
            setTimeSlotId(value.timeSlotId());
            resetChangedOnNotNull();
        }
    }
}
