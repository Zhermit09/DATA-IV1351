/*
 * This file is generated by jOOQ.
 */
package se.soundgood.jooq.tables.records;


import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;

import se.soundgood.jooq.tables.Enrollment;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnrollmentRecord extends UpdatableRecordImpl<EnrollmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>enrollment.lesson_id</code>.
     */
    public EnrollmentRecord setLessonId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>enrollment.lesson_id</code>.
     */
    public Long getLessonId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>enrollment.student_id</code>.
     */
    public EnrollmentRecord setStudentId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>enrollment.student_id</code>.
     */
    public Long getStudentId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EnrollmentRecord
     */
    public EnrollmentRecord() {
        super(Enrollment.ENROLLMENT);
    }

    /**
     * Create a detached, initialised EnrollmentRecord
     */
    public EnrollmentRecord(Long lessonId, Long studentId) {
        super(Enrollment.ENROLLMENT);

        setLessonId(lessonId);
        setStudentId(studentId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EnrollmentRecord
     */
    public EnrollmentRecord(se.soundgood.jooq.tables.pojos.Enrollment value) {
        super(Enrollment.ENROLLMENT);

        if (value != null) {
            setLessonId(value.lessonId());
            setStudentId(value.studentId());
            resetChangedOnNotNull();
        }
    }
}
