/*
 * This file is generated by jOOQ.
 */
package se.soundgood.jooq.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import se.soundgood.jooq.enums.Instype;
import se.soundgood.jooq.enums.Lesstype;
import se.soundgood.jooq.enums.Mgenre;
import se.soundgood.jooq.tables.pojos.Lesson;
import se.soundgood.jooq.enums.Skill;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LessonRecord extends UpdatableRecordImpl<LessonRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>lesson.lesson_id</code>.
     */
    public LessonRecord setLessonId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>lesson.lesson_id</code>.
     */
    public Long getLessonId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>lesson.instructor_id</code>.
     */
    public LessonRecord setInstructorId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>lesson.instructor_id</code>.
     */
    public Long getInstructorId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>lesson.lesson_type</code>.
     */
    public LessonRecord setLessonType(Lesstype value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>lesson.lesson_type</code>.
     */
    public Lesstype getLessonType() {
        return (Lesstype) get(2);
    }

    /**
     * Setter for <code>lesson.skill_level</code>.
     */
    public LessonRecord setSkillLevel(Skill value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>lesson.skill_level</code>.
     */
    public Skill getSkillLevel() {
        return (Skill) get(3);
    }

    /**
     * Setter for <code>lesson.min_students</code>.
     */
    public LessonRecord setMinStudents(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>lesson.min_students</code>.
     */
    public Integer getMinStudents() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>lesson.max_students</code>.
     */
    public LessonRecord setMaxStudents(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>lesson.max_students</code>.
     */
    public Integer getMaxStudents() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>lesson.instrument_type</code>.
     */
    public LessonRecord setInstrumentType(Instype value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>lesson.instrument_type</code>.
     */
    public Instype getInstrumentType() {
        return (Instype) get(6);
    }

    /**
     * Setter for <code>lesson.music_genre</code>.
     */
    public LessonRecord setMusicGenre(Mgenre value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>lesson.music_genre</code>.
     */
    public Mgenre getMusicGenre() {
        return (Mgenre) get(7);
    }

    /**
     * Setter for <code>lesson.payment_description_id</code>.
     */
    public LessonRecord setPaymentDescriptionId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>lesson.payment_description_id</code>.
     */
    public Long getPaymentDescriptionId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LessonRecord
     */
    public LessonRecord() {
        super(se.soundgood.jooq.tables.Lesson.LESSON);
    }

    /**
     * Create a detached, initialised LessonRecord
     */
    public LessonRecord(Long lessonId, Long instructorId, Lesstype lessonType, Skill skillLevel, Integer minStudents, Integer maxStudents, Instype instrumentType, Mgenre musicGenre, Long paymentDescriptionId) {
        super(se.soundgood.jooq.tables.Lesson.LESSON);

        setLessonId(lessonId);
        setInstructorId(instructorId);
        setLessonType(lessonType);
        setSkillLevel(skillLevel);
        setMinStudents(minStudents);
        setMaxStudents(maxStudents);
        setInstrumentType(instrumentType);
        setMusicGenre(musicGenre);
        setPaymentDescriptionId(paymentDescriptionId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LessonRecord
     */
    public LessonRecord(Lesson value) {
        super(se.soundgood.jooq.tables.Lesson.LESSON);

        if (value != null) {
            setLessonId(value.lessonId());
            setInstructorId(value.instructorId());
            setLessonType(value.lessonType());
            setSkillLevel(value.skillLevel());
            setMinStudents(value.minStudents());
            setMaxStudents(value.maxStudents());
            setInstrumentType(value.instrumentType());
            setMusicGenre(value.musicGenre());
            setPaymentDescriptionId(value.paymentDescriptionId());
            resetChangedOnNotNull();
        }
    }
}
