/*
 * This file is generated by jOOQ.
 */
package se.soundgood.storage.jooq.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import se.soundgood.storage.jooq.tables.Instructor;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstructorRecord extends UpdatableRecordImpl<InstructorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>instructor.instructor_id</code>.
     */
    public InstructorRecord setInstructorId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>instructor.instructor_id</code>.
     */
    public Long getInstructorId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>instructor.leads_ensemble</code>.
     */
    public InstructorRecord setLeadsEnsemble(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>instructor.leads_ensemble</code>.
     */
    public Boolean getLeadsEnsemble() {
        return (Boolean) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InstructorRecord
     */
    public InstructorRecord() {
        super(Instructor.INSTRUCTOR);
    }

    /**
     * Create a detached, initialised InstructorRecord
     */
    public InstructorRecord(Long instructorId, Boolean leadsEnsemble) {
        super(Instructor.INSTRUCTOR);

        setInstructorId(instructorId);
        setLeadsEnsemble(leadsEnsemble);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InstructorRecord
     */
    public InstructorRecord(se.soundgood.storage.jooq.tables.pojos.Instructor value) {
        super(Instructor.INSTRUCTOR);

        if (value != null) {
            setInstructorId(value.instructorId());
            setLeadsEnsemble(value.leadsEnsemble());
            resetChangedOnNotNull();
        }
    }
}
